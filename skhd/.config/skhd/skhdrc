# launch applications
alt - return : /Applications/kitty.app/Contents/MacOS/kitty -d ~
# alt - return : kitty &
alt - w : open -n -a "Brave Browser"
alt - y : open .
alt - e : ~/.local/bin/edit_config
alt - r : /Applications/dmenu-mac.app/Contents/MacOS/dmenu-mac
alt - backspace: ~/.local/bin/powermenu

# restart yabai
shift + alt - r: launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

#
# alt - q : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)
# alt - q : osascript -e 'tell application "System Events" to perform action "AXPress" of (first button whose subrole is "AXCloseButton") of (first window whose subrole is "AXStandardWindow") of (first process whose frontmost is true)'
# alt - q: chunkc tiling::window --close

# focus window
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# swap managed window
shift + alt - h : yabai -m window --swap west
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
shift + alt - l : yabai -m window --swap east

# move managed window
shift + alt + ctrl - h : yabai -m window --warp west
shift + alt + ctrl - j : yabai -m window --warp south
shift + alt + ctrl - k : yabai -m window --warp north
shift + alt + ctrl - l : yabai -m window --warp east

# rotate tree
# alt - r : yabai -m space --rotate 90

# toggle window fullscreen zoom
alt - f : yabai -m window --toggle zoom-fullscreen

# alt - s : yabai -m window --toggle
alt - s : yabai -m window --toggle sticky;\
          yabai -m window --toggle topmost;\
          yabai -m window --toggle pip

# toggle padding and gap
# alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap


# toggle window split type
alt - t : yabai -m window --toggle split

# balance size of windows
shift + alt - 0 : yabai -m space --balance

# move window and focus desktop
shift + alt - right : yabai -m window --space next

cmd - 1 : yabai -m window --space 1; yabai -m space --focus 1
cmd - 2 : yabai -m window --space 2; yabai -m space --focus 2
cmd - 3 : yabai -m window --space 3; yabai -m space --focus 3
cmd - 4 : yabai -m window --space 4; yabai -m space --focus 4
cmd - 5 : yabai -m window --space 5; yabai -m space --focus 5
cmd - 6 : yabai -m window --space 6; yabai -m space --focus 6
cmd - 7 : yabai -m window --space 7; yabai -m space --focus 7
cmd - 8 : yabai -m window --space 8; yabai -m space --focus 8
cmd - 9 : yabai -m window --space 9; yabai -m space --focus 9


# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
shift + alt - n : yabai -m space --create && \
                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                   yabai -m window --space "${index}" && \
                   yabai -m space --focus "${index}"

# fast focus desktop
alt - tab : yabai -m space --focus recent
# send window to monitor and follow focus
shift + alt - n : yabai -m window --display next; yabai -m display --focus next
shift + alt - p : yabai -m window --display previous; yabai -m display --focus previous

# float / unfloat window and center on screen
alt - o : yabai -m window --toggle float --grid 4:4:1:1:2:2
